/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ReportData as PrismaReportData } from "@prisma/client";

export class ReportDataServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ReportDataCountArgs, "select">
  ): Promise<number> {
    return this.prisma.reportData.count(args);
  }

  async reportDataItems(
    args: Prisma.ReportDataFindManyArgs
  ): Promise<PrismaReportData[]> {
    return this.prisma.reportData.findMany(args);
  }
  async reportData(
    args: Prisma.ReportDataFindUniqueArgs
  ): Promise<PrismaReportData | null> {
    return this.prisma.reportData.findUnique(args);
  }
  async createReportData(
    args: Prisma.ReportDataCreateArgs
  ): Promise<PrismaReportData> {
    return this.prisma.reportData.create(args);
  }
  async updateReportData(
    args: Prisma.ReportDataUpdateArgs
  ): Promise<PrismaReportData> {
    return this.prisma.reportData.update(args);
  }
  async deleteReportData(
    args: Prisma.ReportDataDeleteArgs
  ): Promise<PrismaReportData> {
    return this.prisma.reportData.delete(args);
  }
}
