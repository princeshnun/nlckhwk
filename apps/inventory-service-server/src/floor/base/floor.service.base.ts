/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Floor as PrismaFloor } from "@prisma/client";

export class FloorServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FloorCountArgs, "select">): Promise<number> {
    return this.prisma.floor.count(args);
  }

  async floors(args: Prisma.FloorFindManyArgs): Promise<PrismaFloor[]> {
    return this.prisma.floor.findMany(args);
  }
  async floor(args: Prisma.FloorFindUniqueArgs): Promise<PrismaFloor | null> {
    return this.prisma.floor.findUnique(args);
  }
  async createFloor(args: Prisma.FloorCreateArgs): Promise<PrismaFloor> {
    return this.prisma.floor.create(args);
  }
  async updateFloor(args: Prisma.FloorUpdateArgs): Promise<PrismaFloor> {
    return this.prisma.floor.update(args);
  }
  async deleteFloor(args: Prisma.FloorDeleteArgs): Promise<PrismaFloor> {
    return this.prisma.floor.delete(args);
  }
}
